<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leorain.apim.mapper.ProjectMapper">
    <resultMap id="BaseResultMap" type="com.leorain.apim.entity.ProjectEntity">
        <id column="projectId" property="projectId" jdbcType="BIGINT"/>
        <result column="projectName" property="projectName" jdbcType="VARCHAR"/>
        <result column="projectDescribe" property="projectDescribe" jdbcType="VARCHAR"/>
        <result column="projectManager" property="projectManager" jdbcType="BIGINT"/>
        <result column="projectManagerText" property="projectManagerText" jdbcType="VARCHAR"/>
        <result column="memberCount" property="memberCount" jdbcType="INTEGER"/>
        <result column="createUserId" property="createUserId" jdbcType="BIGINT"/>
        <result column="createDateTime" property="createDateTime" jdbcType="TIMESTAMP"/>
        <result column="updateUserId" property="updateUserId" jdbcType="BIGINT"/>
        <result column="updateDateTime" property="updateDateTime" jdbcType="TIMESTAMP"/>

    </resultMap>

    <sql id="Base_Column_List">
        projectId, projectName, projectDescribe, projectManager, createUserId, createDateTime,
        updateUserId, updateDateTime
    </sql>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM T_API_PROJECT
    </select>

    <select id="getAllWithDetail" resultMap="BaseResultMap">
        SELECT tap.projectId AS  projectId, tap.projectName AS projectName, tap.projectDescribe AS projectDescribe,
         tap.projectManager AS projectManager, tap.createUserId AS createUserId, tap.createDateTime AS createDateTime,
         tap.updateUserId AS updateUserId, tap.updateDateTime AS updateDateTime, tau.cnName AS projectManagerText
        FROM T_API_PROJECT tap LEFT JOIN T_API_USER tau ON tap.projectManager = tau.userId
    </select>

    <select id="getMemberCountByProjectList" resultMap="BaseResultMap">
        SELECT tap.projectId AS projectId, COUNT(tapm.userId) AS memberCount
        FROM T_API_PROJECT tap LEFT JOIN T_API_PROJECT_MEMBER tapm ON tap.projectId = tapm.projectId
        WHERE tap.projectId IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY tap.projectId;
    </select>

    <select id="getOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT tap.projectId AS  projectId, tap.projectName AS projectName, tap.projectDescribe AS projectDescribe,
         tap.projectManager AS projectManager, tap.createUserId AS createUserId, tap.createDateTime AS createDateTime,
         tap.updateUserId AS updateUserId, tap.updateDateTime AS updateDateTime, tau.cnName AS projectManagerText
        FROM T_API_PROJECT tap LEFT JOIN T_API_USER tau ON tap.projectManager = tau.userId
        WHERE tap.projectId = #{projectId}
    </select>

    <insert id="insert" parameterType="com.leorain.apim.entity.ProjectEntity">
       INSERT INTO 
       		T_API_PROJECT
       		(projectId, projectName, projectDescribe, projectManager,
       		 createUserId, createDateTime, updateUserId, updateDateTime)
       	VALUES
       		(#{projectId}, #{projectName}, #{projectDescribe}, #{projectManager},
       		 #{createUserId}, #{createDateTime}, #{updateUserId}, #{updateDateTime})
    </insert>

    <update id="update" parameterType="com.leorain.apim.entity.ProjectEntity">
        UPDATE
        T_API_PROJECT
        SET
        <if test="projectName != null">projectName = #{projectName},</if>
        <if test="projectDescribe != null">projectDescribe = #{projectDescribe},</if>
        <if test="projectManager != null">projectManager = #{projectManager},</if>
        <if test="updateUserId != null">updateUserId = #{updateUserId},</if>
        <if test="updateDateTime != null">updateDateTime = #{updateDateTime}</if>
        WHERE
        projectId = #{projectId}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
       DELETE FROM
       		 T_API_PROJECT
       WHERE 
       		 projectId =#{projectId}
    </delete>

</mapper>